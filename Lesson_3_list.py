# Задача 1 (Добавление элементов в конкретное место списка)
# Дан список:
# tools = ['молоток', 'отвёртка', 'гаечный ключ']
# Вставь слово 'пассатижи' между 'отвёртка' и 'гаечный ключ' (используй точный индекс). Выведи обновлённый список.

tools = ['молоток', 'отвёртка', 'гаечный ключ']
tools.insert(2, "пассатижи")
print(tools)

# Задача 2 (Срезы списка)
# Дан список:
# numbers = [0, 10, 20, 30, 40, 50, 60]
# Выведи срез списка, содержащий элементы с индексами от 2 до 5 включительно.
# Формат вывода:
# [20, 30, 40, 50]
numbers = [0, 10, 20, 30, 40, 50, 60]
print(numbers[2:6])

# Задача 3 (Удаление элементов)
# Дан список:
# languages = ['Python', 'Java', 'C++', 'JavaScript', 'Ruby']
# Удали язык 'C++' из списка по значению (используй метод, который ищет и удаляет первый подходящий элемент). Выведи обновлённый список.
# Формат вывода:
# ['Python', 'Java', 'JavaScript', 'Ruby']
languages = ['Python', 'Java', 'C++', 'JavaScript', 'Ruby']
languages.remove('C++')
print(languages)

# Задача 3.1 (Удаление всех вхождений)
# Дан список с дубликатами:
# langs = ['Python', 'C++', 'Java', 'C++', 'JavaScript', 'C++', 'Ruby']
# Удали все элементы 'C++' из списка.
# Ожидаемый результат:
# ['Python', 'Java', 'JavaScript', 'Ruby']

langs = ['Python', 'C++', 'Java', 'C++', 'JavaScript', 'C++', 'Ruby']
langs = [lang for lang in langs if lang != 'C++']

print(langs)

# Задача 4 (Добавление элементов + срезы)
# Дан список:
# numbers = [1, 2, 3, 4]
# Сделай следующее:
# Добавь число 5 в конец списка,
# Вставь число 0 в начало списка,
# Выведи первые 3 элемента итогового списка через срез.
# Ожидаемый вывод:
# [0, 1, 2]

numbers = [1, 2, 3, 4]
numbers.append(5)
numbers.insert(0,0)
print(numbers[:3])

# Усложнённая задача (Вставка по условию + срезы)
# Дан список:
# data = [10, 25, 14, 8, 32, 17]
# Найди индекс первого чётного числа в списке (используй цикл или метод списка).
# Вставь число 0 перед этим чётным числом (используй найденный индекс).
# Выведи срез списка от начала до вставленного нуля (включительно).
# Ожидаемый вывод:
# [10, 25, 0, 14]  # если первое чётное число 14 (индекс 2)

data = [10, 25, 14, 8, 32, 17]
index = None
for i, num in enumerate(data):
    if num % 2 == 0:
        index = i
        break
if index is not None:
    data.insert(index, 0)
    print(data[:index + 1])
else:
    print("Чётное число не найдено")

# Задача 5 (Слияние списков + срезы)
# Дан список:
# list_a = [1, 2, 3, 4, 5]
# list_b = [10, 20, 30]
# Сделай следующее:
# Объедини списки без изменения исходных (создай новый список),
# В новом списке замени последние 2 элемента на [99, 100],
# Выведи:
# Итоговый список,
# Исходный list_a (должен остаться без изменений).
# Ожидаемый вывод:
# [1, 2, 3, 4, 5, 10, 20, 99, 100]  # Итоговый
# [1, 2, 3, 4, 5]                     # Исходный list_a

list_a = [1, 2, 3, 4, 5]
list_b = [10, 20, 30]
list_c = list_a + list_b
list_c[-2:] = [99, 100]
print("Итоговый список:", list_c)
print("Исходный list_a:", list_a)

# Задача 6 (Методы списков + условия)
#
# Дан список:
# words = ["яблоко", "", "кофе", "книга", "", "солнце"]
# Сделай следующее:
# Удали все пустые строки из списка (используй метод .remove() или генератор),
# Добавь в конец списка слово "ветер",
# Выведи список и его длину.
# Ожидаемый вывод:
# ['яблоко', 'кофе', 'книга', 'солнце', 'ветер']
# Длина списка: 5

words = ["яблоко", "", "кофе", "книга", "", "солнце"]
words = [word for word in words if word != ""]
words.append("ветер")
print(words)
print(f"Длина списка: {len(words)}")

# Задача 7 (Работа с вложенными списками)
# Дан список:
# matrix = [
#     [1, 2, 3],
#     [4, 5, 6],
#     [7, 8, 9]
# ]
# Сделай следующее:
# Выведи первую строку матрицы (подсписок с индексом 0),
# Выведи центральный элемент (значение 5) через двойную индексацию,
# Замени последний элемент последней строки на 99.
matrix = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]
]

print(matrix[0])
print(matrix[1][1])
matrix[-1][-1] = 99
print(matrix)

# Задача 8 (Комбинированная: списки + строки)

# Дан список слов:
# words = ["Питон", "Код", "Автоматизация", "Тест"]
# Сделай следующее:
# Преобразуй все слова в верхний регистр (создай новый список),
# Объедини элементы нового списка в одну строку через пробел,
# Выведи результат и количество символов в итоговой строке.
#
# Ожидаемый вывод:
# ПИТОН КОД АВТОМАТИЗАЦИЯ ТЕСТ
# Количество символов: 25

words = ["Питон", "Код", "Автоматизация", "Тест"]

words_new = [word.upper() for word in words]
result = ' '.join(words_new)
print(result)
print(f"Количество символов: {len(result)}")

# Задача 9 (Работа с изменяемостью списков)

# Дан список чисел:
# numbers = [10, [20, 30], 40, [50, 60]]
# Сделай следующее:
# Измени первый элемент вложенного списка [20, 30] на 25 (должно стать [25, 30]),
# Добавь число 70 в конец вложенного списка [50, 60],
# Выведи:
# Изменённый список numbers,
# Количество вложенных списков в нём.

numbers = [10, [20, 30], 40, [50, 60]]
numbers[1][0] = 25
numbers[3].append(70)

print(numbers)
count = sum(1 for item in numbers if isinstance(item, list))
print(count)

# Задача 10 (Финал темы: списки + строки + условия)
# Дан список строк:
# data = ["Text42", "3Python", "Code", "777", "1001"]
# Сделай следующее:
# Создай новый список, содержащий только строки длиной > 4 символа,
# В этом списке замени все цифры в строках на символ # (используй .isdigit() или цикл),
# Выведи:
# Исходный список,
# Обработанный список,
# Количество изменённых символов.
# Ожидаемый вывод:
# Исходный: ['Text42', '3Python', 'Code', '777', '1001']
# Обработанный: ['Text##', '#Python']
# Изменено символов: 4

data = ["Text42", "3Python", "Code", "777", "1001"]

filtered = [s for s in data if len(s) > 4]

processed = []
char_count = 0
for s in filtered:
    count = sum(1 for c in s if c.isdigit())  # Считаем цифры
    new_s = ''.join(['#' if c.isdigit() else c for c in s])
    processed.append(new_s)
    char_count += count

print("Исходный список:", data)
print("Обработанный список:", processed)
print("Количество изменённых символов:",char_count)